<?xml version="1.0"?>
<application name="block LU">
<description> Block LU decomposition of a matrix.
</description>
<graph>
blockcount:=BC;
save_init:=SI;

if(blockcount eq 1)
then
    compute XMP_genMat(mA,1,1);
    if(save_init eq 0)
    then
        compute XMP_copyMat(mA,mA_init);
    endif
    compute XMP_factoLU(mA);
else
    par(i:=0;blockcount-1)(j:=0;blockcount-1)
    do
        compute XMP_genMat(A[i][j],i,j);
        if(save_init eq 0) then compute XMP_copyMat(A[i][j],A_init[i][j]); endif
        notify(p[i][j][0]);
    enddo

    par(i:=0;blockcount-1)(j:=0;blockcount-1)
    do
        if (j gt i) then
            par(k:=i+1;blockcount-1)
            do
                wait(p[k][j][i]);
                wait(p[k][i][i+1]);
                wait(p[i][j][i]);

                #A[k,j] = A[k,j] - A[k,i] * A[i,j]
                compute XMP_prodDiff(A[k][i],A[i][j],A[k][j]);

                notify(p[k][j][i+1]);
            enddo
        else
            if (i eq j) then
                if(i neq blockcount-1) then
                    wait(p[i][i][i]);

                    #B[i]=inverse(A[i,i])
                    compute XMP_inversion(A[i][i],B[i]);

                    notify(p[i][i][i+1]);
                endif
            else
                wait(p[j][j][j+1]);
                wait(p[i][j][j]);

                #A[i,j] = A[i,j] * B[j]
                compute XMP_prodMat2(A[i][j],B[j]);

                notify(p[i][j][j+1]);
            endif
        endif
    enddo
endif
   </graph>
</application>


